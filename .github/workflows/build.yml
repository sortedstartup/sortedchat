name: Build UI and Go App

on:
  push:
    branches: [ main, github-actions-to-build ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install frontend dependencies
        working-directory: frontend/sortedchat
        run: pnpm install

      - name: Build frontend
        working-directory: frontend/sortedchat
        run: pnpm run build

  build-go:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, windows, darwin]
        arch: [amd64, arm64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.mod') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.3'

      - name: Build Go backend
        working-directory: backend
        run: |
          CGO_ENABLED=1
          OUT=sortedchat-${{ matrix.os }}-${{ matrix.arch }}
          if [ "${{ matrix.os }}" = "windows" ]; then OUT="$OUT.exe"; fi
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o $OUT ./mono

      - name: Upload Go executable as artifact
        uses: actions/upload-artifact@v4
        with:
          name: sortedchat-${{ matrix.os }}-${{ matrix.arch }}
          path: backend/sortedchat-${{ matrix.os }}-${{ matrix.arch }}*
