// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.0
// source: chatservice.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateChatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateChatRequest) Reset() {
	*x = CreateChatRequest{}
	mi := &file_chatservice_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateChatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChatRequest) ProtoMessage() {}

func (x *CreateChatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chatservice_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChatRequest.ProtoReflect.Descriptor instead.
func (*CreateChatRequest) Descriptor() ([]byte, []int) {
	return file_chatservice_proto_rawDescGZIP(), []int{0}
}

func (x *CreateChatRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateChatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	ChatId        string                 `protobuf:"bytes,2,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateChatResponse) Reset() {
	*x = CreateChatResponse{}
	mi := &file_chatservice_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateChatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChatResponse) ProtoMessage() {}

func (x *CreateChatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chatservice_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChatResponse.ProtoReflect.Descriptor instead.
func (*CreateChatResponse) Descriptor() ([]byte, []int) {
	return file_chatservice_proto_rawDescGZIP(), []int{1}
}

func (x *CreateChatResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateChatResponse) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

type ChatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	ChatId        string                 `protobuf:"bytes,2,opt,name=chatId,proto3" json:"chatId,omitempty"`
	Model         string                 `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatRequest) Reset() {
	*x = ChatRequest{}
	mi := &file_chatservice_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatRequest) ProtoMessage() {}

func (x *ChatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chatservice_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatRequest.ProtoReflect.Descriptor instead.
func (*ChatRequest) Descriptor() ([]byte, []int) {
	return file_chatservice_proto_rawDescGZIP(), []int{2}
}

func (x *ChatRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *ChatRequest) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

func (x *ChatRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

type ChatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatResponse) Reset() {
	*x = ChatResponse{}
	mi := &file_chatservice_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatResponse) ProtoMessage() {}

func (x *ChatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chatservice_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatResponse.ProtoReflect.Descriptor instead.
func (*ChatResponse) Descriptor() ([]byte, []int) {
	return file_chatservice_proto_rawDescGZIP(), []int{3}
}

func (x *ChatResponse) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type GetHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChatId        string                 `protobuf:"bytes,1,opt,name=chatId,proto3" json:"chatId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHistoryRequest) Reset() {
	*x = GetHistoryRequest{}
	mi := &file_chatservice_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoryRequest) ProtoMessage() {}

func (x *GetHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chatservice_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetHistoryRequest) Descriptor() ([]byte, []int) {
	return file_chatservice_proto_rawDescGZIP(), []int{4}
}

func (x *GetHistoryRequest) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

type GetHistoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	History       []*ChatMessage         `protobuf:"bytes,1,rep,name=history,proto3" json:"history,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHistoryResponse) Reset() {
	*x = GetHistoryResponse{}
	mi := &file_chatservice_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoryResponse) ProtoMessage() {}

func (x *GetHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chatservice_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetHistoryResponse) Descriptor() ([]byte, []int) {
	return file_chatservice_proto_rawDescGZIP(), []int{5}
}

func (x *GetHistoryResponse) GetHistory() []*ChatMessage {
	if x != nil {
		return x.History
	}
	return nil
}

type ChatMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Role          string                 `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	mi := &file_chatservice_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_chatservice_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_chatservice_proto_rawDescGZIP(), []int{6}
}

func (x *ChatMessage) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *ChatMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type GetChatListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChatListRequest) Reset() {
	*x = GetChatListRequest{}
	mi := &file_chatservice_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChatListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatListRequest) ProtoMessage() {}

func (x *GetChatListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chatservice_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatListRequest.ProtoReflect.Descriptor instead.
func (*GetChatListRequest) Descriptor() ([]byte, []int) {
	return file_chatservice_proto_rawDescGZIP(), []int{7}
}

type GetChatListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chats         []*ChatInfo            `protobuf:"bytes,1,rep,name=chats,proto3" json:"chats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChatListResponse) Reset() {
	*x = GetChatListResponse{}
	mi := &file_chatservice_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChatListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatListResponse) ProtoMessage() {}

func (x *GetChatListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chatservice_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatListResponse.ProtoReflect.Descriptor instead.
func (*GetChatListResponse) Descriptor() ([]byte, []int) {
	return file_chatservice_proto_rawDescGZIP(), []int{8}
}

func (x *GetChatListResponse) GetChats() []*ChatInfo {
	if x != nil {
		return x.Chats
	}
	return nil
}

type ChatInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChatId        string                 `protobuf:"bytes,1,opt,name=chatId,proto3" json:"chatId,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatInfo) Reset() {
	*x = ChatInfo{}
	mi := &file_chatservice_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatInfo) ProtoMessage() {}

func (x *ChatInfo) ProtoReflect() protoreflect.Message {
	mi := &file_chatservice_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatInfo.ProtoReflect.Descriptor instead.
func (*ChatInfo) Descriptor() ([]byte, []int) {
	return file_chatservice_proto_rawDescGZIP(), []int{9}
}

func (x *ChatInfo) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

func (x *ChatInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ModelListInfo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Label           string                 `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Provider        string                 `protobuf:"bytes,3,opt,name=provider,proto3" json:"provider,omitempty"`
	Url             string                 `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	InputTokenCost  float32                `protobuf:"fixed32,5,opt,name=input_token_cost,json=inputTokenCost,proto3" json:"input_token_cost,omitempty"`
	OutputTokenCost float32                `protobuf:"fixed32,6,opt,name=output_token_cost,json=outputTokenCost,proto3" json:"output_token_cost,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ModelListInfo) Reset() {
	*x = ModelListInfo{}
	mi := &file_chatservice_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModelListInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelListInfo) ProtoMessage() {}

func (x *ModelListInfo) ProtoReflect() protoreflect.Message {
	mi := &file_chatservice_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelListInfo.ProtoReflect.Descriptor instead.
func (*ModelListInfo) Descriptor() ([]byte, []int) {
	return file_chatservice_proto_rawDescGZIP(), []int{10}
}

func (x *ModelListInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ModelListInfo) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *ModelListInfo) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *ModelListInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ModelListInfo) GetInputTokenCost() float32 {
	if x != nil {
		return x.InputTokenCost
	}
	return 0
}

func (x *ModelListInfo) GetOutputTokenCost() float32 {
	if x != nil {
		return x.OutputTokenCost
	}
	return 0
}

type ListModelsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListModelsRequest) Reset() {
	*x = ListModelsRequest{}
	mi := &file_chatservice_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListModelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListModelsRequest) ProtoMessage() {}

func (x *ListModelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chatservice_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListModelsRequest.ProtoReflect.Descriptor instead.
func (*ListModelsRequest) Descriptor() ([]byte, []int) {
	return file_chatservice_proto_rawDescGZIP(), []int{11}
}

type ListModelsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Models        []*ModelListInfo       `protobuf:"bytes,1,rep,name=models,proto3" json:"models,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListModelsResponse) Reset() {
	*x = ListModelsResponse{}
	mi := &file_chatservice_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListModelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListModelsResponse) ProtoMessage() {}

func (x *ListModelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chatservice_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListModelsResponse.ProtoReflect.Descriptor instead.
func (*ListModelsResponse) Descriptor() ([]byte, []int) {
	return file_chatservice_proto_rawDescGZIP(), []int{12}
}

func (x *ListModelsResponse) GetModels() []*ModelListInfo {
	if x != nil {
		return x.Models
	}
	return nil
}

type ChatSearchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatSearchRequest) Reset() {
	*x = ChatSearchRequest{}
	mi := &file_chatservice_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatSearchRequest) ProtoMessage() {}

func (x *ChatSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chatservice_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatSearchRequest.ProtoReflect.Descriptor instead.
func (*ChatSearchRequest) Descriptor() ([]byte, []int) {
	return file_chatservice_proto_rawDescGZIP(), []int{13}
}

func (x *ChatSearchRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type SearchResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChatName      string                 `protobuf:"bytes,1,opt,name=chat_name,json=chatName,proto3" json:"chat_name,omitempty"`
	ChatId        string                 `protobuf:"bytes,2,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	MatchedText   string                 `protobuf:"bytes,3,opt,name=matched_text,json=matchedText,proto3" json:"matched_text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchResult) Reset() {
	*x = SearchResult{}
	mi := &file_chatservice_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResult) ProtoMessage() {}

func (x *SearchResult) ProtoReflect() protoreflect.Message {
	mi := &file_chatservice_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResult.ProtoReflect.Descriptor instead.
func (*SearchResult) Descriptor() ([]byte, []int) {
	return file_chatservice_proto_rawDescGZIP(), []int{14}
}

func (x *SearchResult) GetChatName() string {
	if x != nil {
		return x.ChatName
	}
	return ""
}

func (x *SearchResult) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

func (x *SearchResult) GetMatchedText() string {
	if x != nil {
		return x.MatchedText
	}
	return ""
}

type ChatSearchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Results       []*SearchResult        `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatSearchResponse) Reset() {
	*x = ChatSearchResponse{}
	mi := &file_chatservice_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatSearchResponse) ProtoMessage() {}

func (x *ChatSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chatservice_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatSearchResponse.ProtoReflect.Descriptor instead.
func (*ChatSearchResponse) Descriptor() ([]byte, []int) {
	return file_chatservice_proto_rawDescGZIP(), []int{15}
}

func (x *ChatSearchResponse) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ChatSearchResponse) GetResults() []*SearchResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type CreateProjectRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Name           string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description    string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	AdditionalData string                 `protobuf:"bytes,3,opt,name=additional_data,json=additionalData,proto3" json:"additional_data,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateProjectRequest) Reset() {
	*x = CreateProjectRequest{}
	mi := &file_chatservice_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectRequest) ProtoMessage() {}

func (x *CreateProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chatservice_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectRequest.ProtoReflect.Descriptor instead.
func (*CreateProjectRequest) Descriptor() ([]byte, []int) {
	return file_chatservice_proto_rawDescGZIP(), []int{16}
}

func (x *CreateProjectRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateProjectRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateProjectRequest) GetAdditionalData() string {
	if x != nil {
		return x.AdditionalData
	}
	return ""
}

type CreateProjectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	ProjectId     string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateProjectResponse) Reset() {
	*x = CreateProjectResponse{}
	mi := &file_chatservice_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectResponse) ProtoMessage() {}

func (x *CreateProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chatservice_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectResponse.ProtoReflect.Descriptor instead.
func (*CreateProjectResponse) Descriptor() ([]byte, []int) {
	return file_chatservice_proto_rawDescGZIP(), []int{17}
}

func (x *CreateProjectResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateProjectResponse) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type GetProjectsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProjectsRequest) Reset() {
	*x = GetProjectsRequest{}
	mi := &file_chatservice_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectsRequest) ProtoMessage() {}

func (x *GetProjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chatservice_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectsRequest.ProtoReflect.Descriptor instead.
func (*GetProjectsRequest) Descriptor() ([]byte, []int) {
	return file_chatservice_proto_rawDescGZIP(), []int{18}
}

type GetProjectsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Projects      []*Project             `protobuf:"bytes,1,rep,name=projects,proto3" json:"projects,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProjectsResponse) Reset() {
	*x = GetProjectsResponse{}
	mi := &file_chatservice_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectsResponse) ProtoMessage() {}

func (x *GetProjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chatservice_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectsResponse.ProtoReflect.Descriptor instead.
func (*GetProjectsResponse) Descriptor() ([]byte, []int) {
	return file_chatservice_proto_rawDescGZIP(), []int{19}
}

func (x *GetProjectsResponse) GetProjects() []*Project {
	if x != nil {
		return x.Projects
	}
	return nil
}

type Project struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description    string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	AdditionalData string                 `protobuf:"bytes,4,opt,name=additional_data,json=additionalData,proto3" json:"additional_data,omitempty"`
	CreatedAt      string                 `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      string                 `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Project) Reset() {
	*x = Project{}
	mi := &file_chatservice_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project) ProtoMessage() {}

func (x *Project) ProtoReflect() protoreflect.Message {
	mi := &file_chatservice_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project.ProtoReflect.Descriptor instead.
func (*Project) Descriptor() ([]byte, []int) {
	return file_chatservice_proto_rawDescGZIP(), []int{20}
}

func (x *Project) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Project) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Project) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Project) GetAdditionalData() string {
	if x != nil {
		return x.AdditionalData
	}
	return ""
}

func (x *Project) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Project) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type ListDocumentsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDocumentsRequest) Reset() {
	*x = ListDocumentsRequest{}
	mi := &file_chatservice_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDocumentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDocumentsRequest) ProtoMessage() {}

func (x *ListDocumentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chatservice_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDocumentsRequest.ProtoReflect.Descriptor instead.
func (*ListDocumentsRequest) Descriptor() ([]byte, []int) {
	return file_chatservice_proto_rawDescGZIP(), []int{21}
}

func (x *ListDocumentsRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type ListDocumentsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Documents     []*Document            `protobuf:"bytes,1,rep,name=documents,proto3" json:"documents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDocumentsResponse) Reset() {
	*x = ListDocumentsResponse{}
	mi := &file_chatservice_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDocumentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDocumentsResponse) ProtoMessage() {}

func (x *ListDocumentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chatservice_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDocumentsResponse.ProtoReflect.Descriptor instead.
func (*ListDocumentsResponse) Descriptor() ([]byte, []int) {
	return file_chatservice_proto_rawDescGZIP(), []int{22}
}

func (x *ListDocumentsResponse) GetDocuments() []*Document {
	if x != nil {
		return x.Documents
	}
	return nil
}

type Document struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId     string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	DocsId        string                 `protobuf:"bytes,3,opt,name=docs_id,json=docsId,proto3" json:"docs_id,omitempty"`
	FileName      string                 `protobuf:"bytes,4,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Document) Reset() {
	*x = Document{}
	mi := &file_chatservice_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Document) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Document) ProtoMessage() {}

func (x *Document) ProtoReflect() protoreflect.Message {
	mi := &file_chatservice_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Document.ProtoReflect.Descriptor instead.
func (*Document) Descriptor() ([]byte, []int) {
	return file_chatservice_proto_rawDescGZIP(), []int{23}
}

func (x *Document) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Document) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *Document) GetDocsId() string {
	if x != nil {
		return x.DocsId
	}
	return ""
}

func (x *Document) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *Document) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Document) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type RetrieveSimilarChunksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Query         string                 `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RetrieveSimilarChunksRequest) Reset() {
	*x = RetrieveSimilarChunksRequest{}
	mi := &file_chatservice_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetrieveSimilarChunksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveSimilarChunksRequest) ProtoMessage() {}

func (x *RetrieveSimilarChunksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chatservice_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveSimilarChunksRequest.ProtoReflect.Descriptor instead.
func (*RetrieveSimilarChunksRequest) Descriptor() ([]byte, []int) {
	return file_chatservice_proto_rawDescGZIP(), []int{24}
}

func (x *RetrieveSimilarChunksRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *RetrieveSimilarChunksRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type RetrieveSimilarChunksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*SimilarChunkResult  `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RetrieveSimilarChunksResponse) Reset() {
	*x = RetrieveSimilarChunksResponse{}
	mi := &file_chatservice_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetrieveSimilarChunksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveSimilarChunksResponse) ProtoMessage() {}

func (x *RetrieveSimilarChunksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chatservice_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveSimilarChunksResponse.ProtoReflect.Descriptor instead.
func (*RetrieveSimilarChunksResponse) Descriptor() ([]byte, []int) {
	return file_chatservice_proto_rawDescGZIP(), []int{25}
}

func (x *RetrieveSimilarChunksResponse) GetResults() []*SimilarChunkResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type SimilarChunkResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chunk         *Chunk                 `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
	Similarity    float32                `protobuf:"fixed32,2,opt,name=similarity,proto3" json:"similarity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SimilarChunkResult) Reset() {
	*x = SimilarChunkResult{}
	mi := &file_chatservice_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimilarChunkResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimilarChunkResult) ProtoMessage() {}

func (x *SimilarChunkResult) ProtoReflect() protoreflect.Message {
	mi := &file_chatservice_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimilarChunkResult.ProtoReflect.Descriptor instead.
func (*SimilarChunkResult) Descriptor() ([]byte, []int) {
	return file_chatservice_proto_rawDescGZIP(), []int{26}
}

func (x *SimilarChunkResult) GetChunk() *Chunk {
	if x != nil {
		return x.Chunk
	}
	return nil
}

func (x *SimilarChunkResult) GetSimilarity() float32 {
	if x != nil {
		return x.Similarity
	}
	return 0
}

type Chunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId     string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	DocsId        string                 `protobuf:"bytes,3,opt,name=docs_id,json=docsId,proto3" json:"docs_id,omitempty"`
	StartByte     int32                  `protobuf:"varint,4,opt,name=start_byte,json=startByte,proto3" json:"start_byte,omitempty"`
	EndByte       int32                  `protobuf:"varint,5,opt,name=end_byte,json=endByte,proto3" json:"end_byte,omitempty"`
	Text          string                 `protobuf:"bytes,6,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Chunk) Reset() {
	*x = Chunk{}
	mi := &file_chatservice_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Chunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chunk) ProtoMessage() {}

func (x *Chunk) ProtoReflect() protoreflect.Message {
	mi := &file_chatservice_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chunk.ProtoReflect.Descriptor instead.
func (*Chunk) Descriptor() ([]byte, []int) {
	return file_chatservice_proto_rawDescGZIP(), []int{27}
}

func (x *Chunk) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Chunk) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *Chunk) GetDocsId() string {
	if x != nil {
		return x.DocsId
	}
	return ""
}

func (x *Chunk) GetStartByte() int32 {
	if x != nil {
		return x.StartByte
	}
	return 0
}

func (x *Chunk) GetEndByte() int32 {
	if x != nil {
		return x.EndByte
	}
	return 0
}

func (x *Chunk) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

var File_chatservice_proto protoreflect.FileDescriptor

const file_chatservice_proto_rawDesc = "" +
	"\n" +
	"\x11chatservice.proto\x12\n" +
	"sortedchat\"'\n" +
	"\x11CreateChatRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"G\n" +
	"\x12CreateChatResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x17\n" +
	"\achat_id\x18\x02 \x01(\tR\x06chatId\"O\n" +
	"\vChatRequest\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\x12\x16\n" +
	"\x06chatId\x18\x02 \x01(\tR\x06chatId\x12\x14\n" +
	"\x05model\x18\x03 \x01(\tR\x05model\"\"\n" +
	"\fChatResponse\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\"+\n" +
	"\x11GetHistoryRequest\x12\x16\n" +
	"\x06chatId\x18\x01 \x01(\tR\x06chatId\"G\n" +
	"\x12GetHistoryResponse\x121\n" +
	"\ahistory\x18\x01 \x03(\v2\x17.sortedchat.ChatMessageR\ahistory\";\n" +
	"\vChatMessage\x12\x12\n" +
	"\x04role\x18\x01 \x01(\tR\x04role\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\"\x14\n" +
	"\x12GetChatListRequest\"A\n" +
	"\x13GetChatListResponse\x12*\n" +
	"\x05chats\x18\x01 \x03(\v2\x14.sortedchat.ChatInfoR\x05chats\"6\n" +
	"\bChatInfo\x12\x16\n" +
	"\x06chatId\x18\x01 \x01(\tR\x06chatId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"\xb9\x01\n" +
	"\rModelListInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05label\x18\x02 \x01(\tR\x05label\x12\x1a\n" +
	"\bprovider\x18\x03 \x01(\tR\bprovider\x12\x10\n" +
	"\x03url\x18\x04 \x01(\tR\x03url\x12(\n" +
	"\x10input_token_cost\x18\x05 \x01(\x02R\x0einputTokenCost\x12*\n" +
	"\x11output_token_cost\x18\x06 \x01(\x02R\x0foutputTokenCost\"\x13\n" +
	"\x11ListModelsRequest\"G\n" +
	"\x12ListModelsResponse\x121\n" +
	"\x06models\x18\x01 \x03(\v2\x19.sortedchat.ModelListInfoR\x06models\")\n" +
	"\x11ChatSearchRequest\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\"g\n" +
	"\fSearchResult\x12\x1b\n" +
	"\tchat_name\x18\x01 \x01(\tR\bchatName\x12\x17\n" +
	"\achat_id\x18\x02 \x01(\tR\x06chatId\x12!\n" +
	"\fmatched_text\x18\x03 \x01(\tR\vmatchedText\"^\n" +
	"\x12ChatSearchResponse\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\x122\n" +
	"\aresults\x18\x02 \x03(\v2\x18.sortedchat.SearchResultR\aresults\"u\n" +
	"\x14CreateProjectRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12'\n" +
	"\x0fadditional_data\x18\x03 \x01(\tR\x0eadditionalData\"P\n" +
	"\x15CreateProjectResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x1d\n" +
	"\n" +
	"project_id\x18\x02 \x01(\tR\tprojectId\"\x14\n" +
	"\x12GetProjectsRequest\"F\n" +
	"\x13GetProjectsResponse\x12/\n" +
	"\bprojects\x18\x01 \x03(\v2\x13.sortedchat.ProjectR\bprojects\"\xb6\x01\n" +
	"\aProject\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12'\n" +
	"\x0fadditional_data\x18\x04 \x01(\tR\x0eadditionalData\x12\x1d\n" +
	"\n" +
	"created_at\x18\x05 \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\tR\tupdatedAt\"5\n" +
	"\x14ListDocumentsRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\"K\n" +
	"\x15ListDocumentsResponse\x122\n" +
	"\tdocuments\x18\x01 \x03(\v2\x14.sortedchat.DocumentR\tdocuments\"\xad\x01\n" +
	"\bDocument\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x1d\n" +
	"\n" +
	"project_id\x18\x02 \x01(\tR\tprojectId\x12\x17\n" +
	"\adocs_id\x18\x03 \x01(\tR\x06docsId\x12\x1b\n" +
	"\tfile_name\x18\x04 \x01(\tR\bfileName\x12\x1d\n" +
	"\n" +
	"created_at\x18\x05 \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\tR\tupdatedAt\"S\n" +
	"\x1cRetrieveSimilarChunksRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x14\n" +
	"\x05query\x18\x02 \x01(\tR\x05query\"Y\n" +
	"\x1dRetrieveSimilarChunksResponse\x128\n" +
	"\aresults\x18\x01 \x03(\v2\x1e.sortedchat.SimilarChunkResultR\aresults\"]\n" +
	"\x12SimilarChunkResult\x12'\n" +
	"\x05chunk\x18\x01 \x01(\v2\x11.sortedchat.ChunkR\x05chunk\x12\x1e\n" +
	"\n" +
	"similarity\x18\x02 \x01(\x02R\n" +
	"similarity\"\x9d\x01\n" +
	"\x05Chunk\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"project_id\x18\x02 \x01(\tR\tprojectId\x12\x17\n" +
	"\adocs_id\x18\x03 \x01(\tR\x06docsId\x12\x1d\n" +
	"\n" +
	"start_byte\x18\x04 \x01(\x05R\tstartByte\x12\x19\n" +
	"\bend_byte\x18\x05 \x01(\x05R\aendByte\x12\x12\n" +
	"\x04text\x18\x06 \x01(\tR\x04text2\xb6\x06\n" +
	"\n" +
	"SortedChat\x12;\n" +
	"\x04Chat\x12\x17.sortedchat.ChatRequest\x1a\x18.sortedchat.ChatResponse0\x01\x12K\n" +
	"\n" +
	"GetHistory\x12\x1d.sortedchat.GetHistoryRequest\x1a\x1e.sortedchat.GetHistoryResponse\x12N\n" +
	"\vGetChatList\x12\x1e.sortedchat.GetChatListRequest\x1a\x1f.sortedchat.GetChatListResponse\x12K\n" +
	"\n" +
	"CreateChat\x12\x1d.sortedchat.CreateChatRequest\x1a\x1e.sortedchat.CreateChatResponse\x12J\n" +
	"\tListModel\x12\x1d.sortedchat.ListModelsRequest\x1a\x1e.sortedchat.ListModelsResponse\x12K\n" +
	"\n" +
	"SearchChat\x12\x1d.sortedchat.ChatSearchRequest\x1a\x1e.sortedchat.ChatSearchResponse\x12T\n" +
	"\rCreateProject\x12 .sortedchat.CreateProjectRequest\x1a!.sortedchat.CreateProjectResponse\x12N\n" +
	"\vGetProjects\x12\x1e.sortedchat.GetProjectsRequest\x1a\x1f.sortedchat.GetProjectsResponse\x12T\n" +
	"\rListDocuments\x12 .sortedchat.ListDocumentsRequest\x1a!.sortedchat.ListDocumentsResponse\x12l\n" +
	"\x15RetrieveSimilarChunks\x12(.sortedchat.RetrieveSimilarChunksRequest\x1a).sortedchat.RetrieveSimilarChunksResponseB!Z\x1fsortedstartup/chatservice/protob\x06proto3"

var (
	file_chatservice_proto_rawDescOnce sync.Once
	file_chatservice_proto_rawDescData []byte
)

func file_chatservice_proto_rawDescGZIP() []byte {
	file_chatservice_proto_rawDescOnce.Do(func() {
		file_chatservice_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chatservice_proto_rawDesc), len(file_chatservice_proto_rawDesc)))
	})
	return file_chatservice_proto_rawDescData
}

var file_chatservice_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_chatservice_proto_goTypes = []any{
	(*CreateChatRequest)(nil),             // 0: sortedchat.CreateChatRequest
	(*CreateChatResponse)(nil),            // 1: sortedchat.CreateChatResponse
	(*ChatRequest)(nil),                   // 2: sortedchat.ChatRequest
	(*ChatResponse)(nil),                  // 3: sortedchat.ChatResponse
	(*GetHistoryRequest)(nil),             // 4: sortedchat.GetHistoryRequest
	(*GetHistoryResponse)(nil),            // 5: sortedchat.GetHistoryResponse
	(*ChatMessage)(nil),                   // 6: sortedchat.ChatMessage
	(*GetChatListRequest)(nil),            // 7: sortedchat.GetChatListRequest
	(*GetChatListResponse)(nil),           // 8: sortedchat.GetChatListResponse
	(*ChatInfo)(nil),                      // 9: sortedchat.ChatInfo
	(*ModelListInfo)(nil),                 // 10: sortedchat.ModelListInfo
	(*ListModelsRequest)(nil),             // 11: sortedchat.ListModelsRequest
	(*ListModelsResponse)(nil),            // 12: sortedchat.ListModelsResponse
	(*ChatSearchRequest)(nil),             // 13: sortedchat.ChatSearchRequest
	(*SearchResult)(nil),                  // 14: sortedchat.SearchResult
	(*ChatSearchResponse)(nil),            // 15: sortedchat.ChatSearchResponse
	(*CreateProjectRequest)(nil),          // 16: sortedchat.CreateProjectRequest
	(*CreateProjectResponse)(nil),         // 17: sortedchat.CreateProjectResponse
	(*GetProjectsRequest)(nil),            // 18: sortedchat.GetProjectsRequest
	(*GetProjectsResponse)(nil),           // 19: sortedchat.GetProjectsResponse
	(*Project)(nil),                       // 20: sortedchat.Project
	(*ListDocumentsRequest)(nil),          // 21: sortedchat.ListDocumentsRequest
	(*ListDocumentsResponse)(nil),         // 22: sortedchat.ListDocumentsResponse
	(*Document)(nil),                      // 23: sortedchat.Document
	(*RetrieveSimilarChunksRequest)(nil),  // 24: sortedchat.RetrieveSimilarChunksRequest
	(*RetrieveSimilarChunksResponse)(nil), // 25: sortedchat.RetrieveSimilarChunksResponse
	(*SimilarChunkResult)(nil),            // 26: sortedchat.SimilarChunkResult
	(*Chunk)(nil),                         // 27: sortedchat.Chunk
}
var file_chatservice_proto_depIdxs = []int32{
	6,  // 0: sortedchat.GetHistoryResponse.history:type_name -> sortedchat.ChatMessage
	9,  // 1: sortedchat.GetChatListResponse.chats:type_name -> sortedchat.ChatInfo
	10, // 2: sortedchat.ListModelsResponse.models:type_name -> sortedchat.ModelListInfo
	14, // 3: sortedchat.ChatSearchResponse.results:type_name -> sortedchat.SearchResult
	20, // 4: sortedchat.GetProjectsResponse.projects:type_name -> sortedchat.Project
	23, // 5: sortedchat.ListDocumentsResponse.documents:type_name -> sortedchat.Document
	26, // 6: sortedchat.RetrieveSimilarChunksResponse.results:type_name -> sortedchat.SimilarChunkResult
	27, // 7: sortedchat.SimilarChunkResult.chunk:type_name -> sortedchat.Chunk
	2,  // 8: sortedchat.SortedChat.Chat:input_type -> sortedchat.ChatRequest
	4,  // 9: sortedchat.SortedChat.GetHistory:input_type -> sortedchat.GetHistoryRequest
	7,  // 10: sortedchat.SortedChat.GetChatList:input_type -> sortedchat.GetChatListRequest
	0,  // 11: sortedchat.SortedChat.CreateChat:input_type -> sortedchat.CreateChatRequest
	11, // 12: sortedchat.SortedChat.ListModel:input_type -> sortedchat.ListModelsRequest
	13, // 13: sortedchat.SortedChat.SearchChat:input_type -> sortedchat.ChatSearchRequest
	16, // 14: sortedchat.SortedChat.CreateProject:input_type -> sortedchat.CreateProjectRequest
	18, // 15: sortedchat.SortedChat.GetProjects:input_type -> sortedchat.GetProjectsRequest
	21, // 16: sortedchat.SortedChat.ListDocuments:input_type -> sortedchat.ListDocumentsRequest
	24, // 17: sortedchat.SortedChat.RetrieveSimilarChunks:input_type -> sortedchat.RetrieveSimilarChunksRequest
	3,  // 18: sortedchat.SortedChat.Chat:output_type -> sortedchat.ChatResponse
	5,  // 19: sortedchat.SortedChat.GetHistory:output_type -> sortedchat.GetHistoryResponse
	8,  // 20: sortedchat.SortedChat.GetChatList:output_type -> sortedchat.GetChatListResponse
	1,  // 21: sortedchat.SortedChat.CreateChat:output_type -> sortedchat.CreateChatResponse
	12, // 22: sortedchat.SortedChat.ListModel:output_type -> sortedchat.ListModelsResponse
	15, // 23: sortedchat.SortedChat.SearchChat:output_type -> sortedchat.ChatSearchResponse
	17, // 24: sortedchat.SortedChat.CreateProject:output_type -> sortedchat.CreateProjectResponse
	19, // 25: sortedchat.SortedChat.GetProjects:output_type -> sortedchat.GetProjectsResponse
	22, // 26: sortedchat.SortedChat.ListDocuments:output_type -> sortedchat.ListDocumentsResponse
	25, // 27: sortedchat.SortedChat.RetrieveSimilarChunks:output_type -> sortedchat.RetrieveSimilarChunksResponse
	18, // [18:28] is the sub-list for method output_type
	8,  // [8:18] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_chatservice_proto_init() }
func file_chatservice_proto_init() {
	if File_chatservice_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chatservice_proto_rawDesc), len(file_chatservice_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chatservice_proto_goTypes,
		DependencyIndexes: file_chatservice_proto_depIdxs,
		MessageInfos:      file_chatservice_proto_msgTypes,
	}.Build()
	File_chatservice_proto = out.File
	file_chatservice_proto_goTypes = nil
	file_chatservice_proto_depIdxs = nil
}
